<Activity mc:Ignorable="sap sap2010" x:Class="Misc_SendNotification" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Array of values to replace in the body." Name="BodyValues" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of values to replace in the subject." Name="SubjectValues" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="ID of the notification to be sent." Name="NotificationID" Type="InArgument(x:String)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property sap2010:Annotation.AnnotationText="Array of folders to attach to the email. All the files in those folders will be included." Name="AttachmentFolders" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Array of files to attach to the email." Name="Attachments" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Address that receives the email, in case it is variable." Name="ToAddress" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Address that receives the email as carbon copy, in case it is variable." Name="CCAddress" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Outlook account used to send the email. If not provided, the default account is used." Name="OutlookAccount" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Outlook account used to send emails on behalf of another user or group." Name="OutlookOnBehalfOf" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Data table with the notifications." Name="NotificationsDt" Type="InArgument(sd:DataTable)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>803,8973</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Misc_SendNotification_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="64">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="36">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Send an email based on the Notifications spreadsheet.&#xA;&#xA;Mandatory arguments:&#xA;NotificationID: ID of the notification to be sent.&#xA;NotificationsDt: Data table with the notifications.&#xA;&#xA;Optional arguments:&#xA;Attachments: Array of files to attach to the email.&#xA;AttachmentFolders: Array of folders to attach to the email. All the files in those folders will be included.&#xA;SubjectValues: Array of values to replace in the subject.&#xA;BodyValues: Array of values to replace in the body.&#xA;ToAddress: Address that receives the email, in case it is variable.&#xA;CCAddress: Address that receives the email as carbon copy, in case it is variable.&#xA;OutlookAccount: Outlook account used to send the email. If not provided, the default account is used.&#xA;OutlookOnBehalfOf: Outlook account used to send emails on behalf of another user or group.&#xA;ResultsFile: Name of the results file. If not provided, a default location and name will be used.&#xA;&#xA;Important:data table with the notifications.&#xA;This workflow is protected under the US Copyright Office and is intended for the solely usage of Auxis LLC.&#xA;Usage of this workflow without written approval is not permitted." DisplayName="Misc_SendNotification" sap:VirtualizedContainerService.HintSize="700,8908" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="FilteredNotificationsDt" />
      <Variable x:TypeArguments="x:String" Name="emailSMTP_Username" />
      <Variable x:TypeArguments="ss:SecureString" Name="emailSMTP_Password" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="638,92" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Start Send Notifications&quot;]" />
    <Sequence DisplayName="Validate arguments" sap:VirtualizedContainerService.HintSize="638,2326" sap2010:WorkflowViewState.IdRef="Sequence_13">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Validate Notifications" sap:VirtualizedContainerService.HintSize="474,487" sap2010:WorkflowViewState.IdRef="Sequence_11">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[NotificationsDT Is Nothing]" DisplayName="If Notifications is empty" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_11">
          <If.Then>
            <Throw DisplayName="Throw - Missing dt_Notifications" Exception="[new BusinessRuleException(&quot;The dt_Notifications argument is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_3" />
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Validate NotificationID" sap:VirtualizedContainerService.HintSize="474,487" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[String.IsNullOrEmpty(NotificationID)]" DisplayName="If NotificationID is empty" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_12">
          <If.Then>
            <Throw DisplayName="Throw - Mising NotificationID" Exception="[new BusinessRuleException(&quot;The NotificationID argument is empty.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_4" />
          </If.Then>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Validates if the NotificationID exists. If should appear only one time.&#xA;&#xA;If the NotificationID is not found or appears more than once, an error is reported." DisplayName="Validate if NotificationID exists" sap:VirtualizedContainerService.HintSize="474,1161" sap2010:WorkflowViewState.IdRef="Sequence_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:FilterDataTable DataTable="[NotificationsDT]" DisplayName="Filter Data Table - Find Notification" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="412,161" sap2010:WorkflowViewState.IdRef="FilterDataTable_1" OutputDataTable="[FilteredNotificationsDt]" SelectColumnsMode="Keep">
          <ui:FilterDataTable.Filters>
            <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
              <ui:FilterOperationArgument BooleanOperator="And" Operator="EQ">
                <ui:FilterOperationArgument.Column>
                  <InArgument x:TypeArguments="x:String">["NotificationID"]</InArgument>
                </ui:FilterOperationArgument.Column>
                <ui:FilterOperationArgument.Operand>
                  <InArgument x:TypeArguments="x:String">[NotificationID]</InArgument>
                </ui:FilterOperationArgument.Operand>
              </ui:FilterOperationArgument>
            </scg:List>
          </ui:FilterDataTable.Filters>
          <ui:FilterDataTable.SelectColumns>
            <scg:List x:TypeArguments="InArgument" Capacity="4">
              <x:Null />
            </scg:List>
          </ui:FilterDataTable.SelectColumns>
        </ui:FilterDataTable>
        <If Condition="[FilteredNotificationsDt.rows.Count = 0]" DisplayName="If NotificationID was not found" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Then>
            <Throw DisplayName="Throw - NotificationID not found" Exception="[new BusinessRuleException(&quot;It was not possible to find a notification with the provided ID.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_1" />
          </If.Then>
        </If>
        <If Condition="[FilteredNotificationsDt.rows.Count &gt; 1]" DisplayName="If there is more than one NotificationID" sap:VirtualizedContainerService.HintSize="412,376" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Then>
            <Throw DisplayName="Throw - Multiple NotificationID found" Exception="[new BusinessRuleException(&quot;More than one notification was found with the provided ID.&quot;)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
          </If.Then>
        </If>
      </Sequence>
    </Sequence>
    <Sequence DisplayName="Prepare email" sap:VirtualizedContainerService.HintSize="638,5855" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="MessageTo" />
        <Variable x:TypeArguments="x:String" Name="MessageCC" />
        <Variable x:TypeArguments="x:String" Name="MessageBody" />
        <Variable x:TypeArguments="x:String" Name="MessageSubject" />
        <Variable x:TypeArguments="scg:List(x:String)" Name="MessageAttachments" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence sap2010:Annotation.AnnotationText="Mail recipient." DisplayName="To" sap:VirtualizedContainerService.HintSize="576,934" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(FilteredNotificationsDt.Rows(0)(&quot;NotificationTo&quot;).ToString)]" DisplayName="If NotificationTo is not empty" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Assign DisplayName="Assign - To" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[FilteredNotificationsDt.Rows(0)("NotificationTo").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize To" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not ToAddress Is Nothing]" DisplayName="If To values were provided" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_13">
          <If.Then>
            <Assign DisplayName="Assign - To replace Values" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageTo]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[ToAddress]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Carbon copy." DisplayName="Carbon copy (CC)" sap:VirtualizedContainerService.HintSize="576,934" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(FilteredNotificationsDt.Rows(0)(&quot;NotificationCC&quot;).ToString)]" DisplayName="If NotificationCC is not empty" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Then>
            <Assign DisplayName="Assign - CC" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageCC]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[FilteredNotificationsDt.Rows(0)("NotificationCC").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize CC" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageCC]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not CCAddress Is Nothing]" DisplayName="If CC values were provided" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_14">
          <If.Then>
            <Assign DisplayName="Assign - CC replace Values" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageCC]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[CCAddress]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Email subject, can use placeholders." DisplayName="Subject" sap:VirtualizedContainerService.HintSize="576,934" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(FilteredNotificationsDt.Rows(0)(&quot;NotificationSubject&quot;).ToString)]" DisplayName="If NotificationSubject is not empty" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Then>
            <Assign DisplayName="Assign - Subject" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[FilteredNotificationsDt.Rows(0)("NotificationSubject").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize Subject" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">%[No subject]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not SubjectValues Is Nothing]" DisplayName="If Subject values were provided" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Then>
            <Assign DisplayName="Assign - Subject replace Values" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageSubject]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format(MessageSubject, SubjectValues)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Email body, can use placeholders." DisplayName="Email Body" sap:VirtualizedContainerService.HintSize="576,934" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If Condition="[Not String.IsNullOrEmpty(FilteredNotificationsDt.Rows(0)(&quot;NotificationBody&quot;).ToString)]" DisplayName="If NotificationBody is not empty" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_7">
          <If.Then>
            <Assign DisplayName="Assign - Body" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[FilteredNotificationsDt.Rows(0)("NotificationBody").ToString]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Assign - Initialize Body" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
        <If Condition="[Not BodyValues Is Nothing]" DisplayName="If Body values were provided" sap:VirtualizedContainerService.HintSize="340,376" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Then>
            <Assign DisplayName="Assign - Body replace Values" sap:VirtualizedContainerService.HintSize="262,61" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[MessageBody]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[String.Format(MessageBody, BodyValues)]</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
        </If>
      </Sequence>
      <Sequence sap2010:Annotation.AnnotationText="Add all the attachments to a list." DisplayName="Attachments" sap:VirtualizedContainerService.HintSize="576,1567" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign - Initialize Attachments" sap:VirtualizedContainerService.HintSize="514,61" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="scg:List(x:String)">[MessageAttachments]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="scg:List(x:String)">[new List(Of String)]</InArgument>
          </Assign.Value>
        </Assign>
        <If Condition="[Not Attachments Is Nothing]" DisplayName="If Attachments is not empty" sap:VirtualizedContainerService.HintSize="514,536" sap2010:WorkflowViewState.IdRef="If_9">
          <If.Then>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Attachment" sap:VirtualizedContainerService.HintSize="434,260" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Attachments]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <InvokeMethod DisplayName="Invoke Method - Add" sap:VirtualizedContainerService.HintSize="238,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                    <InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="scg:List(x:String)">[MessageAttachments]</InArgument>
                    </InvokeMethod.TargetObject>
                    <InArgument x:TypeArguments="x:String">[item]</InArgument>
                  </InvokeMethod>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </If.Then>
        </If>
        <If Condition="[Not AttachmentFolders Is Nothing]" DisplayName="If AttachmentFolders is not empty" sap:VirtualizedContainerService.HintSize="514,748" sap2010:WorkflowViewState.IdRef="If_10">
          <If.Then>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each AttachmentFolder" sap:VirtualizedContainerService.HintSize="436,472" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[AttachmentFolders]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,348" sap2010:WorkflowViewState.IdRef="Sequence_10">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="s:String[]" Name="Files" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Assign - Get Files" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:String[]">[Files]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(item)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <InvokeMethod DisplayName="Invoke Method - AddRange" sap:VirtualizedContainerService.HintSize="338,136" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="AddRange">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="scg:List(x:String)">[MessageAttachments]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="s:String[]">[Files]</InArgument>
                    </InvokeMethod>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </If.Then>
        </If>
      </Sequence>
      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="576,52" sap2010:WorkflowViewState.IdRef="CommentOut_1">
        <ui:CommentOut.Body>
          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="462,629" sap2010:WorkflowViewState.IdRef="Sequence_15">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap2010:Annotation.AnnotationText="Description: Get secure credentials frm Orchestrator Assets to Login Email" DisplayName="Get Secure Credentiales from Orchestrator Assets" sap:VirtualizedContainerService.HintSize="400,518" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRobotCredential AssetName="[in_Config(&quot;EmailSMTPAccount&quot;).ToString]" CacheStrategy="None" DisplayName="Get Credential" FolderPath="[in_Config(&quot;OrchestratorQueueFolder&quot;).ToString]" sap:VirtualizedContainerService.HintSize="338,365" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[emailSMTP_Password]" Username="[emailSMTP_Username]">
                <ui:GetRobotCredential.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetRobotCredential.TimeoutMS>
              </ui:GetRobotCredential>
            </Sequence>
          </Sequence>
        </ui:CommentOut.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:CommentOut>
      <ui:SendMail Bcc="{x:Null}" Email="{x:Null}" MailMessage="{x:Null}" Name="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" SecurePassword="{x:Null}" UseOAuth="{x:Null}" AttachmentsCollection="[MessageAttachments.ToArray()]" Body="[MessageBody]" Cc="[MessageCC]" DisplayName="Send SMTP Mail Message" EnableSSL="True" From="uipath@savemart.com" sap:VirtualizedContainerService.HintSize="576,149" sap2010:WorkflowViewState.IdRef="SendMail_1" IgnoreCRL="False" IsBodyHtml="True" Port="[CInt(in_Config(&quot;EmailSMTPServerPortName&quot;).ToString)]" SecureConnection="Auto" Server="[in_Config(&quot;EmailSMTPServerHostName&quot;).ToString]" Subject="[MessageSubject]" TimeoutMS="120000" To="[MessageTo]">
        <ui:SendMail.Files>
          <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
        </ui:SendMail.Files>
      </ui:SendMail>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="638,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;End Send Notifications&quot;]" />
  </Sequence>
</Activity>